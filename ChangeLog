	* Allow setting of separator in "list" file type.
	* Fix file loading for different file types.
	* Release 1.6.10 (sorry about this; it's to avoid misunderstandings
	  about versions).
	* Implement range selection. A user should use Shift-Button1
	  to select one and Ctrl-Button1 to select the other end of a range.
	  You need to have a range widget selected for this to make sense.
	  They're currently in the Define Graph dialog and in the Print
	  dialog.

Wed 28 Oct 21:58:14 1998 Danny Backx (danny@gnu.org)
	* Fixed src/Makefile.am so automake isn't upset any more.
	  Apparently automake can't stand multiple oleo_LDADD =
	  lines that are in separate cases of an if statement.
	* Add print button in File menu, and a dialog (incomplete)
	  to define what happens when printing.
	* Add an application resource to determine the default paper size.
	* Add a function to register widgets that want to know when the
	  user selects a range in the matrix. I think this is what it'll
	  do : add a focus-callback to all these widgets so you can figure
	  out which one is active. In that callback, store the widget ID
	  in a global variable. Then when the user selects, use that widget
	  to store a range in.

Sat 24 Oct 23:39:43 1998 Danny Backx (danny@gnu.org)
	* Added simplistic call to insert a row.
	* Fixed XmNenableBadHTMLWarnings (XmHTML widget shouldn't generate
	  warnings about bad HTML) : False is no longer an accepted value.
	* Tracked a couple of bugs in XmHTML : 1.1.5 still has the problem
	  described below.
	* Added Application Resource to specify default Column Width for
	  cells in the matrix. This is copied to the XmNcolumns on a
	  XmTextField so it counts in number of characters, not pixels.
	* Add C++ (!) file to call the free Xbase library.
	  Find it at http://www.startech.keller.tx.us/xbase/xbase.html .
	  Not included in the build right now.
	* Fix a problem in the Motif GUI with strings. Now the current
	  cell always displays itself slightly differently. A cell with
	  contents "this is text" (including the quotes) will show itself
	  including the quotes when it is the current cell, but without
	  the quotes when another cell is current.

Wed  7 Oct 21:54:38 1998 Danny Backx (danny@gnu.org)
	* Release version 1.6.8
	* configure.in, doc/Makefile.am : check whether we have texi2html
	  and cope with failure on that test.
	  Note that texi2html is widely available on the Internet
	  so you should get it :-)

Fri  2 Oct 00:09:06 1998 Danny Backx (danny@gnu.org)
	* src/io-motif.c, io-utils.c: file save didn't work unless the user
	  had manipulated the "file format" option menu. Fixed.
	* Change window/icon title also when saving (so user always sees the
	  file name last saved into).
	* Added error handling in file save function.

Wed 30 Sep 23:45:31 1998 Danny Backx (danny@gnu.org)
	* src/io-motif.c : XmHTML doesn't need to be in a XmScrolledWindow.
	* Formats changing now works.
	* Help anchors need to start with # for XmHTML.
	  Unfortunately this triggers a bug in XmHTML 1.1.4. It needs to
	  check whether the widget is realised in _XmHTMLClearArea.
	  Reported to Koen D'Hondt <ripley@xs4all.nl>.
	  XmHTML 1.1.5 fixes the problem.

Wed 30 Sep 22:29:41 1998 Danny Backx (danny@gnu.org)
	* Too many files and changes to keep track of, really.
	  All this is mainly to start building an OSF/Motif (aka LessTif)
	  graphical user interface for oleo.
	  Shameless plug: LessTif is a free clone of OSF/Motif, available
	  from
		http://www.lesstif.org
	  and
		ftp://ftp.lesstif.org/pub/hungry/lesstif
	* m4/* : add a couple of macros to detect presence of Motif/LessTif,
	  Xbae widgets, XmHTML and SciPlot widgets.
	* Xresources/* : add text files that allow for internationalisation
	  of the texts in the Motif GUI. It's easier to put it here (X has
	  its own i18n mechanism that we're using in this way, using gettext
	  for this would be quite a bit harder). The texts printed from source
	  code are still to be internationalised (is this i15d or i14ed ?) 
	  via GNU gettext, i.e. by replacing "Yow baby" by _("Yow baby").
	* src/io-motif. : this is the bulk of the Motif GUI source.
	  Currently this is far from finished but it does pop up a window
	  and you can interact with it and get reasonable things back.
	  There's even a help system.
	* Talking about which: doc/*.texi was modified to add a couple of
	  tags to allow XmHTML (the HTML widget that I'm using) to locate
	  some specific piece of text.
	* */Makefile.am : a couple of tweaks to make the distribution complete.
	  Now "make distcheck" actually works.
	* doc/oleo_web.html : this should be a new web page for oleo, to
	  be put on www.gnu.org .

Thu Apr 16 17:41:00 1997 Jeff Bailey   (jbailey@gnu.org)

	* configure.in: Link for libintl.h if necessary.
	Fix GTK.
	* src/Makefile.am:  Make sure INCLUDES uses -I../intl -I../lib
	* src/io-curses.c: Remove volatile from function that doesn't
	need it.
	* src/io-abstract.h: ""
	* src/io-x11.c: ""
	* src/io-gtk.c: ""

Tue Apr 7 18:47:00 1997  Jeff Bailey   (jbailey@gnu.org)

	* configure.in: Use gtk.m4 macro to detect Gtk.
	* Makefile.am: Require Automake 1.3
	* */Makefile.in:  Regenerate with Automake 1.3
	* lib/ansi2knr.*: Update from Automake 1.3
	* TODO: Update
	* THANKS: Update

	* lib/xmalloc.c: If PROTOTYPES not defined, don't use.
	* src/cmd.c: Include key.h to get CTRL macro.
	* src/Makefile.am: Make sure INTLLIBS are included in oleo.
	Patch file by Markku Rossi <mtr@ngs.fi> 

	Incorporate Oleo-patched 1.6C-E from Frank Bennett:
	* basic.c: Added two new commands, save-point-to-cell
	and save-mark-to-cell.  Saving these had been
	possible, but with an obscure combination of six
	commands or so.  Populated necessaries to basic.h
	and defun.h.

	* basic.c: Addes new command goto-set-cell.  Populated
	necessary changes to basic.h and defun.h

	* byte-compile.c: Altered value for cells_funs in hack
	entry (quod vidis).  This accomodates the addition of new
	function varval(int, str, str) in cells.c

	* cells.c: New function varval(int, str, str).  Populated
	necessary changes in byte-compile.c, etc.

	* cmd.c(command_loop):  This function now takes an additional
	argument, used to flag execution of a command (as opposed to
	a macro) from execute_command.  This permits the command	
	argument types 'r' and '@' to discriminate between macro
	and command execution.  Big improvement in flexibility
	and in stability at one blow.

	* cmd.c(command_loop): Some improvements have been made to the
	handling of regions in macros.  Arguments of type 'r' no
	longer supply an implicit argument (i.e. the currently
	marked range, if there is one) to the called command.
	Instead, these now always expect an explicit range argument
	when called in a macro.  A new type '@' argument always
	provides an implicit argument (even when called interactively).
	Macros can now bne written using the commands copy-region,
	move-region, copy-values-in-region and set-region-formula
	that don't spring nasty surprises on you when the mark is
	set.

	* cmd.c(command_loop):  Introduced global variable that can be used
	by new error-msg expression to terminate macro processing.
	Unfortunetly, the approach adopted (search for "ioerror" to
	find the changes) does not work for macros bound to keys,
	but it's a start, and the limitation can be worked around
	by binding to a variable that invokes the target variable
	via "exec".

	* decompile.c: Function decomp is now an alias for
	decomp_formula.  The latter is the old decomp function,
	with a new toggle that triggers return of the formatted
	content of floating point numbers.  Dealing with finances
	is now a little less madding.

	* defun.h:  Interface change.  Changes set-region-formula arg 
	style from $ to $', since most of the time this is used in a macro,
	and is seldom used to clone existing text to a passel of other cells.
	Command set-variable has been replaced by set-var and unset-var.  New
	set-var command takes arguments in the opposite order (i.e. region
	name, rather than name, region) and the region uses the new '@' arg
	type which offers and prompts in interactive mode, or grabs point or
	region transparently in a macro.  The name of execute-commnad has
	been changed to exec.  Less typing.  Eliminated disabled block
	of code referring to an "enter-string-in-cell" command.  Can't
	find the source for this in the code, so it might as well go.  Also
	made inclusion of several X11-related commands (set-default-x-font,
	set-x-default-font, graph-x11-mono, graph-x11-color), and eliminated
	their key-bindings and menu entries in the termincal version as
	well.  Also, reorganize all the enries into catagories.

	* io-edit.c:  Changes insert_other_cell_value and insert_cell_value so
	that quotes are stripped.  Required a change to cell_value_string,
	and this was propagated to all instances of that function.  Added
	code for insert_other_cell_Value and insert-other-cell-expression,
	and tweaked in a new command insert-abs-cell-ref by putting a toggle
	into existing insert_abs_ref function.

	* io-term.c: Added code for set-var and unset-var.

	* io-utils.s: cell_value_string now accepts a toggle that can
	be used to turn off enclosing quotes.  Added function flt_to_str_fmt,
	which can be called instead of flt_to_str if the current cell arraw is
	available.  Returns the formatted content of floating point numbers
	and percents, suitable for editing by humans.  Performed some
	surgeru on range_name and cell_name to make things a little more robust
	and eliminate some duplicated code.

	* key.c: Added code for new command unbind-key.  Move bind_set to 
	bind_or_unbind_set.  New function unbind_set passes an empty command
	argument to the old function, causing the keys designated to be
	unbound.

	* ref.c: new_var_value has been preserved in old_new_var_value,
	and a new function new_var_Value has been introdueced in tis stead.
	The only difference in the new version is that is tkaes a struct
	rng as argument, instad of parsing a char *.

	* regions.c: Changed move_region and copy_region functions 
	so that mark follwes the new test.  You can hop stuff
	around the sheet more easily now, and hop-and-reformat
	is smoother.

	* init.c: Eliminated key bindings to graph-x11-mono and
	graph-x11-color from the terminal only version.

	* graph.c: Replaced graph_quoted_str function with
	discrete functions line_to_q_char and char_to_q_char.
	This, and some jiggery-pokery in gnuplot_spew (look
	for graph_title at or about lines 1070 and 1071),
	prevents Oleo from whining about unquoted data set titles.
	We _should_ offer a default data set title that is
	somewhat informative.

	* xrdb.c: Remove sysinfo call - It wasn't posix.

	* font.h:  Changed TimesRomand to Times-Roman in various
	places to confrom to the font names used by Ghostscript.
	* defun.h: ""
	* graph.c: ""

	* help.c: In descrive_function, forced ib.len to always 
	be 1.  I have not tested this extensively, nor have I
	traced through the code to see _why_ this works in the
	cases I have tried.  But the previous algorithm found
	ridiculoud numbers for texts associated with macros
	defined using name-macro-string.  Asking for help with
	these functions no longer dumps code.	

Mon Mar 23 21:00:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* lib/Makefile.am: Deposit contents of LIBOBJS into liboleo.a
	* configure.in: Make sure the LIBOBJS gets added into Makefiles.
	Detect libguile, and link against if available. 

Fri Mar 20 17:00:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/io-gtk.c: Fix typo.

Sun Mar 15 12:27:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* configure.in:  Make -Wall default only on --with-debug
	* src/io-curses.c: Expand IO_SETUP macro.
	* src/io-x11.c: Expand IO_SETUP macro.
	* src/io-abstract.h: Remove IO_SETUP macro.

Sat Mar 14 14:34:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* Makefile.am: Compile i18n stuff BEFORE source.
	* src/io-term.c: Runtime options to disable GTK
	* src/input.c: Make debug printf's print to stderr for redirection.
	* src/io-term.c: ditto
	* src/io-x11.c: ditto
	* src/io-gtk.c: ditto
	Patches by Scott Heavner
	
	* src/*.c: Make debugs only print on #ifdef DEBUG
	* src/io-term.c: Pretty output of --help statement.
	* configure: Fix to work with gtk-0.99.6,
	Make -Wall on by default if GCC.
	Add --with-debug option.
	
	* src/ref.c: Remove some warnings when compiled with -Wall
	* src/eval.c: ditto
	* src/byte-compile.c: ditto
	* src/regions.c: ditto
	* src/utils.c: ditto
	* src/lists.c: ditto
	* src/io-term.c: ditto
	* src/io-utils.c: ditto
	* src/hash.c: ditto
	* src/io-curses.c: ditto
	* src/sylk.c: ditto
	* src/oleofile.c: ditto
	* src/list.c: ditto
	* src/busi.c: ditto
	* src/cells.c: ditto
	* src/cmd.c: ditto
	* src/io-gtk.c: ditto

	* src/sort.h: create
	* src/Makefile.am: Include sort.h

Fri Feb 27 22:35:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/input.c: Remove more debug notes.
	* */Makefile(., .in): regenerate.

Sun Feb 1  20:00:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/io-gtk.c: Begin to add gtk colours into Oleo.  req'd to
	show the cursor in the grid.

Mon Jan 26 19:15:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* lib/Makefile.am: Distribute getdate.h

Mon Jan 26 18:25:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* oleobug.in: Create - Thanks to the GLIBC people!
	* Makefile.am: Distribute oleobug.in

Thu Jan 15 19:14:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/io-term.c: i18n
	* acconfig.h: More 18n
	* po/ChangeLog: Create - Null file

Sun Jan 11 21:23:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* configure.in:  Create po/Makefile to fix make maintainer-clean.
			 Fix ALL_LINGUAS statement.

Sun Jan 11 18:35:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* po/: Create & populate
	* intl/: Create & populate
	* configure.in: Add AM_GNU_GETTEXT, ALL_LINGUAS
	* Makefile.am: Add po and intl to SUBDIRS
	* ABOUT-NLS: Add
	* gettext.m4: Add
	* lcmessage.m4: Add
	* progtest.m4: Add
	* po/POTFILES.in: Create
	* README: Update

Mon Jan 5 19:18:00 1997   Jeff Bailey  (jbailey@gnu.org)

	* src/io-gtk.c: Implement gio_inputize_cursor
			Change gdk_pixmap_destroy to gdk_pixmap_unref
			Add further debugs in gio_redraw_input
			Add default fonts to Oleo
			Kludge gio_repaint_win
	* src/io-term.c: Remove some Debug warnings
	
Sun Dec 14 15:47:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/io-term.c: Remove openning warranty screen for testing.

Fri Dec 12 21:43:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/io-gtk.c: Kludge g_input_metric into working so oleo will load.

Mon Dec 8 20:49:00 1997   Jeff Bailey  (jbailey@gnu.org)

	* src/utils.c: Add #include <stdarg.h> fix typos
	* src/line.c: ""
	* src/cmd.c: ""
	* src/info.c: ""
	* src/io-gtk.c: Flush out repaint function
	* src/input.c: Add troubleshooting statements

Thu Nov 27 22:39:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* */Makefile.in: Regenerate with Automake 1.2d
	* doc/texinfo.tex: Update from FSF Copy

Tue Nov 25 20:44:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/utils.c: ANSIfy
	* src/forminfo.c: ""
	* doc/*.texi: Update from fisk's 1.6 Oleo docs.
	* doc/ranlib.texi: Add	
	* doc/KEYS: remove
	* USING: remove

Tue Nov 17 19:40:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/io-edit.c: ANSIfy.
	* src/io-term.c: ""
	* src/io-utils.c: ""
	* src/decompile.c: ""
	* src/line.c: ""
	* src/key.c: ""
	* src/panic.c: ""
	* src/utils.c: ""
	* src/print.c: ""
	* src/cmd.c: ""
	* src/display.c: ""
	* src/byte-compile.c: ""

Mon Nov 17 23:49:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* src/format.c: ANSIfy.
	* src/input.c: ""
	* src/info.c: ""

Sun Nov 16 15:00:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* THANKS: Fix typo.

Sat Nov 15 17:27:00 1997  Jeff Bailey  (jbailey@gnu.org)

	* THANKS: File added
	* Makefile.am: Updated to gnits.
	* TODO: Updated

Wed Nov 5 21:05:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* src/io-gtk.c: Abstract Oleo close routine.

Tue Nov 4 19:19:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* src/io-gtk.c: add gset_status, gdraw_status, gset_text, flush out
	gio_update_status.  Add stub indicators for other functions.
	* src/io-x11.c: rename set_status and draw_status to
	xset_status, xdraw_status.  set_text to xset_text.
	* src/io-abstract.c: ANSIfy, add io_command_loop.
	* src/io-gtk.h, io-gtk.c: Remove IO_SETUP macro, expand out
	by hand to simplify troubleshooting.
	* src/io-term.c: remove sleep(5) from curses startup.

Mon Nov 3 19:59:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* lib/error.c: move program_name to PACKAGE
	* src/io-gtk.c: Make gdraw_text_item work.  Other
	changes re: text pasting.
	* src/io-gtk.c: Add signal function to file, exit.

Wed Oct 29 19:56:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Rename draw_text_item function to xdraw_text_item.

Sun Oct 26 14:38:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* src/io-term.c: Integrate GTK parsing in with X and curses
	* src/io-gtk.h: Create, add defines for generic functions.
	* src/io-gtk.c: Rename functions to match rest of Oleo.
	Add stub functions for places where code hasn't been flushed
	out yet.  Begin to add code to place characters in drawing_area.
	* src/Makefile.am: modify to include io-gtk.h. 
 
Fri Oct 24 22:17:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* src/io-gtk.c: Add drawing_area for spreadsheet display.
	Fix scroll bars.  Add items to File menu.  Perform unsuccessful
	ceremony to attempt to conjure up useful gtk docs.

Fri Oct 24 18:58:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* src/io-term.c: Move GTK window creation to
	* src/io-gtk.c: here.

	* src/io-gtk.c: Make Help menu conformant to GNOME.

Thu Oct 23 20:31:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* src/io-term.c: Add about menu and scroll bars.

Thu Oct 23 17:56:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* doc/interface.texi: Fix to work with Texinfo 3.11

Wed Oct 22 22:35:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* io-term.c: Add File, Edit menus to window.

Sat Oct 18 19:47:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Modify src/Makefile.am to not include the X Include path twice.
	* io-term.c: Begin to add gtk window creation.

Sat Oct 18 16:28:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Add lib/libintl.h for xmalloc.c 
	* configure.in: Modify to detect gtk and add hook to
	disable with --without-gtk

Fri Oct 10 00:28:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* KEYS: move to doc/

Tue Oct 7  20:39:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* utils.c, panic.c: Remove hard coded "Oleo" words.
	* io-term.c: Update copywrite.
	* configure.in: Add AM_CYGWIN32
	* utils.c: Report all errors as Error Number

Sun Oct 5  19:03:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* xmalloc.c: Update from Glibc 2.0.5

	* xmalloc.c: Move to lib/
	* random.c: ""
	* lib/error.[ch]: Add

	* error.c: Rely on system header files for sys_siglist def'n

	* BUGS, EIGHTBIT: remove

Sun Oct 5  13:55:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* getopt.[ch]: Update from Glibc 2.0.5
	* getopt1.c: ""
	
	* mktime.c: Move to lib/
	* obstack.[ch]: ""
	* getdate.y: ""
	* getopt.[ch]: ""
	* getopt1.c: ""
	* */Makefile.am: Create library in lib/ of all sources that
	do not come from oleo itself.  This is so that ansi2knr won't
	attach those sources, which may not be formatted correctly.
	Also, allows for easy updating of files.

Sat Oct 4  18:42:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Fix stub #defines in stub.c

Sat Oct 4  17:12:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* io-x11.c: ANSIfy
	* io-curses.c: ""
	* date.c: ""
	* eval.c: ""
	* graph.c: ""
	* font.c: ""
	* help.c: ""
	* ref.c: ""
	* lists.c: ""
	* regions.c: ""
	* stub.c: ""

	* utils.c: ANSIfy but search STDC for where I couldn't
	* sysdef.h: ""

Fri Oct 3  00:25:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Regenerate with Automake 1.2c to remove test error
	* configure.in: Change Oleo to oleo

Thu Oct 2  22:27:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* ansi2knr.[c1] added to lib/ directory.

Wed Oct 1  19:12:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* regenerate with Automake-1.2c to fix build time test problem
	* ir.c: ANSIfy
	* basic.c: More of same
	* window.c: More of same
	* args.c: More of same

	* cmd.c: Mostly ANSIfy.  Where couldn't for now, search FIXME in
	sources.

Fri Sep 26 22:44:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* getdate.y: Fix declarations, remove RCS references
	* configure.in, src/Makefile.am: Finally figure out
	a way to vary the libraries based on whether X is enabled
	or not.
	
Thu Sep 25 22:05:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Update to Automake-1.2b to try and fix library problem.
	* ylwrap: update
	* missing: update

Sun Sep 21 17:11:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* io-x11.c: include config.h before ifdef'ing.
	* xrdb.c: ditto
	* src/Makefile.am: Don't include -lX11 if no X is compiled.

Fri Sep 19 23:21:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* io-x11.c: Roll back some patches now that I grok the file.
	Also, remove version number from window title.
	* src/Makefile.am: add xrdb.c, ir.c, ir.h >duh<
	* xrdb.c: Take out X11R4 hooks, those variables aren't
	tested for anymore.
	* configure.in: Bumped to version 1.6.6
	* Makefile.am: Stole release target from gtk.
	* io-term.c: Make display version number correctly in --version

Fri Sep 19 18:48:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Add curses support.
	* io-x11.c: Fix so that compiling with X11R6 libraries is possible
	* src/Makefile.am: Forcibly add -lX11 to linker.

	I'm not deceiving myself into thinking that it works now.
	However, it is possible to compile it, and it does spawn an X
	session.

Thu Sep 18 16:36:00 1997  Jeff Bailey  (jbailey@gnu.ai.mit.edu)

	* Makefile.am: Require automake 1.2, disable dependency tracking
	* More X fixes.
	* Add Termcap and Termlib support back in.
	* utils.c: remove def'n of sys_errlist[] for SCO portability.

Tue Sep 16 18:33:00 1997  Jeff Bailey  (jbailey@nisa.net)

	* Uptime mktime.c from Glibc.
	* Don't install obstack and mktime by default.  Detect
	  and add only if necessary
	* Detect if compiler is ANSI C or not.
	* Fix Broken X detection.  Must configure with --without-x
	  for now until completely working.  Will not compile
	  otherwise!

Sun Sep 14 18:01:00 1997  Jeff Bailey  (jbailey@nisa.net)

       * Remove parse.y dependancy on funcdef.h kludge.
       * Remove ugly function mappings from funcdef.h.
       * Update src/Makefile.am to include header files.

Sat Sep 13 17:02:00 1997  Jeff Bailey  (jbailey@nisa.net)

	* Update obstack.[ch] from Glibc.
	* Fix documentation so that no errors are produced from makeinfo.

Fri Sep 12 18:55:00 1997  Jeff Bailey  (jbailey@nisa.net)

	* *.c, *.h, *.y, ylwrap: move to src/
	* get rid of irs-1992.oleo for good this time
	* ANNOUCE: remove
	* doc/: add old version of documentation
	* src/Makefile.am: Update
	* Makefile.am: Update
	* configure.in: Update
	* acconfig.h: Add
	
Mon Sep  1 23:12:00 1997  Jeff Bailey  (jbailey@nisa.net)

        * INSTALL.OLEO: remove
	* TODO: update
        * args.c: Reference config.h
        * busi.c: ditto
        * cells.c: ditto
        * date.c: ditto
        * decompile.c: ditto
        * display.c: ditto
        * eval.c: ditto
        * font.c: ditto
        * format.c: ditto
        * forminfo.c: ditto
        * funcs.c: ditto
        * graph.c: ditto
        * hash.c: ditto
	* help.c: ditto
	* info.c: ditto
	* init.c: ditto
	* input.c: ditto
	* io-curses.c: ditto
	* io-edit.c: ditto
	* io-term.c: ditto
	* io-utils.c: ditto
	* io-x11.c: ditto
	* ir.c: ditto
	* key.c: ditto
	* line.c: ditto
	* list.c: ditto
	* lists.c: ditto
	* mktime.c: ditto
	* obstack.c: ditto
	* oleofile.c: ditto
	* panic.c: ditto
	* print.c: ditto
	* random.c: ditto
	* ref.c: ditto
	* regions.c: ditto
	* sc.c: ditto
	* string.c: ditto
	* stub.c: ditto
	* sylk.c: ditto
	* windows.c: ditto
	* xmalloc.c: ditto
	* xrdb.c: ditto

	Update to Automake 1.2, Autoconf 2.12.

Sun Jun  1 21:26:00 1997  Jeff Bailey  (jbailey@nisa.net)

	* configure.am: create
        * config.h.in: create
        * configure.in: redo
        * Makefile.in: redo

	* utils.c: Update sys_errlist[]'s def'n.

	* utils.c: Reference config.h.
	* cmd.c: ditto
	* basic.c: ditto
	* byte-compile.c: ditto
	Maybe need to check portability, and check return types.

	* vsprintf.c: Temporarily remove.  This breaks some portability,
	but dependancies weren't sane.
	* vfprintf.c: ditto
	* _doprnt.c: ditto
	* strftime.c: ditto
	* alloca.c: ditto

	Update to autoconf 2.12, automake 1.1p.  Prepare to increase 
	portability to include Gnu Libc 2.  Temporarily require NCurses
	to function.  Add check for -lm.
	
	Add AUTHORS, TODO.  Update INSTALL.
 
Fri Jun  3 22:07:49 1994  Tom Lord  (lord@x1.cygnus.com)

	* ref.c(finish_shift_var): don't leave VAR_DANGLING_RANGE's
	dangling.  This used to cause some vars to disappear when you
	saved files.

	* io-edit.c(goto_char): clip, don't signal errors, for
	arguments out of range.

	* io-x11.c: Return-Path: <rpj@fir.canberra.edu.au>

	The io-x11.c.dif patch allows oleo's xio_scan_for_input() routine
	to accept X send_event keypress events from any application, not
	just tkSteal. It recognises that they are send_events, as distinct
	from keyboard originated events, and buffers them separately until
	a `return' is received. The buffer is then sent to oleo's
	execute_command() routine. Command lines sent to oleo in this way
	will therefore be executed in the same way that commands are
	executed under the oleo read-commands command (which reads from a
	file).

	Normal oleo operation is not affected at all by these additions.
	Even while running embedded within tkoleo, all existing key
	bindings work the same.


	* graph.c: Return-Path: <fisk@medved.bowdoin.edu>
	If you wish to title a graph, your title must be the unnatural 
		title "my graph's title"
	The following fix allows you to only have to type
		"my graph's title"
	when prompted for a title.


	* defun.h Return-Path: <rpj@fir.canberra.edu.au>

	Problem: Using "set-default-font" in a commands file always
	prompts for interactive input even when arguments are included
	with the command.

	Example: set-default-font helvetica 2

	Cause: In defun.h, FUNC_ARG_STRING for the set-default-font
	command uses the "s" verify string style token as in "sSet %0 font
	to? ". The verify string style routine should only be used for the
	last (or sole) argument because it simply does a string copy of
	the remaining characters on the line.

	Thus, in the example above, the font name is taken as "helvetica
	2" and the size factor is missed resulting in the prompt and
	eventual error for the unmatched font name.
	
	Solution: Use the verify word style "w" in place of "s".

	Scope: This problem probably also affects other function argument
	specs and I have modified, without testing, what I think are the
	most suspicious in defun.h. The patch below shows which ones these
	are.


	* args.c: Return-Path: <kai@nimbus.som.cwru.edu>

	Jaakko Hyvatti's <hyvatti@cc.helsinki.fi> patch prompted me to
	play around with some malloc-debugging tools on Oleo, and I
	encountered the following bug during startup (running under X).

	In word_verify() in args.c, the pointer `e' is used to find the
	end of the first word in the string `*end'.  The end of the string
	itself, however, is not checked for, and since the NUL character
	is not considered a space (by my isspace(), anyway), `e' walks
	past the end of the string if a NUL follows the word instead of
	more spaces.

	This apparently went unnoticed, I think, because the NUL is still
	copied into the given argument (so that arg is valid) and the
	total number of arguments is still computed correctly anyway
	(elsewhere).

	There are other functions in the file that don't explicitly check
	for the end of string, either; these are still ok because the NUL
	character is not a digit or alphanum, etc. so those loops stop at
	the end of the string.  I patched some of these any way -- the
	ones that call isspace() -- just in case some funky C library
	thinks that NUL is a space.

	-KNG 931123

	* decompile.c: Return-Path: <hyvatti@cc.helsinki.fi>

	As log as I have been usin oleo-1.5, I have been haunted by core
	dumps.  I am using Linux, with linux-libc-4.4.4 that is quite
	sensitive to free()ing the same area twice in a row.

	Today I spent some time with gdb and some malloc-debugging-hooks,
	and found the cause.  decomp_free() is freeing the same pointer
	twice.  This happens only at cmd.c:1828 in command_loop(), and
	only if find_cell() returns NULL previously at cmd.c:1811.

	This triggers the bug in decomp() that is called at cmd.c:1827.
	save_decomp retains it's old value, and that area is re-freed in
	the following decomp_free().


	* string.c: Return-Path: <kai@nimbus.som.cwru.edu>

	The following 2 patches fix bugs (features?) in the mid() and
	find() functions.  mid() is indexing strings from 0 instead of 1
	like other functions, and find() is switching its str1 and str2
	args, so that it looks for str1 in str2 instead of vice-versa.


Thu Oct 21 11:44:00 1993  Paul Amaranth (amaranth@vela.acs.oakland.edu)
        * xrdb.c Swapped name and class parameters on x_get_string_resource
                 to match the calls in io-x11.  Foreground/background now work.
        * io-x11.c Cleaned up the color allocation code a bit
                   Added a test to set_default_point_size to bail out if
                    x11_opened not set to prevent the thing from hanging
                    if you had that command in your .oleorc and tried to
                    run it from a nonX device.

Fri Jun  3 21:55:31 1994  Tom Lord  (lord@x1.cygnus.com)

	* Return-Path: <rpj@fir.canberra.edu.au>

	There is a bug in version 1.5 file io-x11.c in function
	io_col_to_input_pos(). The bug prevents positioning the input
	cursor at the end of the input text (ie, ready for appending)
	using the mouse.


	* init.c, io-edit.c: Return-Path: <rpj@fir.canberra.edu.au> The
	oleo "USING" file describes the key binding "M-o" for toggling
	overwrite mode when typing in the minibuffer. In version 1.5 this
	binding is not included in init.c. I think this may have been
	deliberate because of a bug in the over_string() function (in
	io-edit.c). The bug caused segmentation faults when appending to
	the end of the input string while in overwrite mode.


	* io-edit.c:  Return-Path: <rpj@fir.canberra.edu.au>

	The oleo command "insert-rel-ref" sometimes computes incorrect
	cell offsets in non-a0 label mode. The problem is that the
	corresponding C function "insert_rel_ref()" uses "setrow" (and
	ditto for "setcol") which is #defined to look at
	"the_cmd_frame->_setrow" rather than
	"the_cmd_frame->prev->_setrow".

	There is also an incorrect format string in insert_abs_ref() which
	causes an extra ':' to be included in some cell ranges.

	* parse.y(parse_cell_or_range): MAX_COL should be MAX_ROW
	from korfhage@weston.poly.edu>

----- release 1.5 -----

Tue Aug 10 02:19:16 1993  Tom Lord  (lord@unix6.andrew.cmu.edu)

	* ref.c (flush_fm_ref): NULL check

Mon Jul 26 16:05:29 1993  Tom Lord  (lord@metis.weh.andrew.cmu.edu)

	* list.c: Applied a patch from chris@lslsun7.epfl.ch (Christian Iseli)
	The patch saves list mode from wasting time examining thousands
	of empty cells.

Sun Jul 25 21:57:43 1993  Tom Lord  (lord@unix1.andrew.cmu.edu)

	* configure.in, io-x11.c: Check for XSetWMProtocols and don't call
	it if it doesn't exist (as in X11R3?)

Wed Jul 21 14:12:08 1993  Tom Lord  (lord@unix8.andrew.cmu.edu)

	* utils.h: don't #define ck_free


----- no additional release info ----

Sun May 23 01:19:38 1993  Tom Lord  (lord@unix9.andrew.cmu.edu)

    -- partial accounting of various patches from Andreas Schwab
       <schwab@issan.informatik.uni-dortmund.de>

       * io-curses.c (_io_redraw_input, redraw_info, _io_redisp): start
       drawing the info screen on row 0 (or else the info screen is one line
       too high)
       (_io_repaint): redraw the prompt if info screen active, too
       * io-edit.c (forward_char): allow the cursor to move after the last
       character
       (goto_char): ... but that is too much
       * window.c (io_set_input_status): use the new values to compute the
       layout
       * help.c (expand_help_message): expand unbound functions correctly

Fri May 21 16:18:46 1993  Tom Lord  (lord@unix10.andrew.cmu.edu)

	* help.c (expand_help_msg): lookup bindings from top_keymap
	instead of cur_keymap.

Thu May 13 13:30:43 1993  Tom Lord  (lord@dacre.bh.andrew.cmu.edu)

	* io-term.c defun.h cmd.c (pushback_keystroke, main): 
	Made the non warrenty not consume a keystroke and not
	appear if a file is being loaded. Hopefully is less offensive to
	pro users.

	* io-edit.c: made the cpp macros non-recursive because
	gcc is just too good for the rest of the world to bear.

	* reginos.c, print.c ({ps,}print_region_cmd): fixed argument
	order. (TEST)

	* io-x11.c, init.c: corrected the ansi arrow bindings. (TEST)

	* panic.h: new file, took over some decls from utils.h

	* io-curses: got rid of unused variable io_input_avail_val

	* io-x11.c: got rid of all references to ->message

Tue May 11 00:49:06 1993  Tom Lord  (lord@socrates.hl.andrew.cmu.edu)

	* io-term.c defun.h cmd.c (pushback_keystroke, main): 
	Made the non warrenty not consume a keystroke so that it 
	is less offensive to pro users.

	* io-edit.c: made the cpp macros non-recursive because
	gcc is just too good for the rest of the world to bear.

	* reginos.c, print.c ({ps,}print_region_cmd): fixed argument
	order. (TEST)

	* io-x11.c, init.c: corrected the ansi arrow bindings. (TEST)

	* panic.h: new file, took over some decls from utils.h

	* io-curses: got rid of unused variable io_input_avail_val

	* io-x11.c: got rid of all references to ->message

	----- some bugfixes not recorded :( -----

Fri Mar 19 01:42:54 1993  Tom Lord  (lord@unix2.andrew.cmu.edu)

	* ref.c (shift_outside): udpate variable refs correctly (moving
	ranges would sometimes cause oleo to hang, othertime not to update
	correctly).

	* ref.c (copy_cell): update timer refs appropriately.

Tue Mar 16 16:05:54 1993  Tom Lord  (lord@antares.weh.andrew.cmu.edu)

	* io-x11.c (xio_scan..., open_display, ...): added a patch from 
	Jeremy.Allison@Corp.Sun.COM (Jeremy Allison):

	    allows oleo to receive keyboard input in X11 under IC\ CCM
	    complient window managers (like olwm) that only give keyboard
	    focus to clients that explicitly request it. I have also added
	    a fix to allow oleo to quit when such \ a window manager sends
	    a WM_DELETE_WINDOW client message.

Fri Mar 12 01:48:35 1993  Tom Lord  (lord@unix7.andrew.cmu.edu)

	* font.c: simplified the font naming system such that one must use
	define-font and then refer to fonts by their oleo name.  The old
	way confused people and would not have worked as well with the new
	command loop. 

Sat Feb 13 15:14:47 1993  Tom Lord  (lord@unix8.andrew.cmu.edu)

	* io-curses.c, basic.c, io-term.c (suspend_oleo, continue...)
	A new command (suspend-oleo) and also set the terminal modes
	nicely when being suspended or continued.

Fri Feb 12 19:14:58 1993  Tom Lord  (lord@watson.bh.andrew.cmu.edu)

	* window.c: i am removing supprot for linked windows because
	they don't appear ever to have worked and are now in the way of
	some other changes.

Tue Feb  9 00:08:20 1993  Tom Lord  (lord@maelstrom.ucc.andrew.cmu.edu)

	* -- extensive --
	There are now doc strings for all interactive functions and
	for all formula functions.  These are defined in defun.h
	and forminfo.h respectively.

	Defun.h is turned into structures and arrays in funcs.h.
	This replaces/augments some tables that were formerly 
	built in io-term.c.

	Defun.h also correlates c functions with their Oleo names and
	func_args strings.


Tue Feb  2 03:30:16 1993  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* basic.c (recalc_cmd => recalculate): added a parameter that
	tells recalculate to recompute all cells, regardless of what
	has changed.  This is like ^L except for formula values instead
	of display state.  When called interactively, a prefix
	arg causes full recalc.  Otherwise, only partial recalc is done.

	* basic.c (imove, inc_direction): new interactive command
	for navigation that is less stressful on the hands/anglo-centric
	than Emacs bindings.

Thu Jan 21 15:38:23 1993  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* -- extensive --
	The command loop was formerly split between io-term and the
	two implementations of get_line.  The newly created
	cmd.[ch] collect all of the command loop in one place.

	The mechanism that builds up arguments for interactive functions
	has been rewritten.  Command-loops are now first class objects 
	so multiple input contexts (e.g. recursive minibuffers) are
	supported.

	io-term.c has been carved up.  Some functions have been moved
	into their own file (format.c).  Many commands have been changed
	slightly to better fit the new command loop.

Mon Jan 11 15:17:15 1993  Tom Lord  (lord@kalypso.weh.andrew.cmu.edu)

	* display.c (record_display_damage): inner loop tested r.  should
	have tested c.

	* alarm.[ch], io-term.c, ref.c: got rid of the alarm functions
	and all uses of SIGALRM.  The alarm is derived by polling time() 
	as part of a select-with-timeout loop.

Sat Jan  9 15:00:16 1993  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* print.c (set_page_size_cmd): incorporated support (from Cosmos
	Nicolaou) for named page sizes 

	* print.c (psprint_region): in the output postscript, define max
	and min because apparently not all ps interpreters do (?!?!).

	* io-x11.c (xio_redisp): only draw the cursor in the current window.

	* io-x11.c (open_): Scale the labels accounding to max_bounds (not
	"M" width).  The reverse change for cell-width scaling.

	* io-term.c (got_sig): don't call io_error_msg from a signal
	handler and therefore don't report the signal to the user.  This
	is a temporary fix.

Fri Jan  8 02:14:39 1993  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* io-term.c io-curses.c io-x11.c:  rewrote real_get_chr
	to use select instead of wait, SIGIO or non-blocking io.
	Updated the display drivers to reflect this.

Wed Jan  6 01:26:00 1993  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* io-term.c (read_file_and_run_hooks): Don't pass a constant
	string to find_var or execute_cmd because those functions can't
	deal with it (grrr). (diagnosis from  Cosmos Nicolaou
	<can@ansa.co.uk>) 

	* io-term.c (set_page_size_cmd): rewritten so as to parse its
	argument correctly.

	* print.c (put_eps_header, psprint_region): incorporated patches
	from Eric S Fraga <eric@mathematics.edinburgh.ac.uk> to fix
	the postscript definition of CELL-GOAL  (in the right-justified
	case) and the computation of the bounding box.

Tue Jan  5 14:31:31 1993  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* everything -- cleaned up nearly all the warning from gcc -pedantic
	-ansi -Wall (other than those fixed by Paul Eggert).  Mostly this
	was a matter of properly (i hope) declaring libc functions in sysdef.h.

	* parse.y (parse_cell_or_range): cleaned up the CK_* macros to get
	rid of the empty else warning.

Thu Dec 31 15:31:32 1992  Paul Eggert  (eggert@twinsun.com)

        * decompile.c (decomp): Use prototoype when defining in ANSI C, since
        the argument type CELLREF will be promoted otherwise, and ANSI C does
        not allow mixing old-style definitions with prototype declarations
        when argument types are promoted.
        * display.c (cell_display_of, pr_display_cell): Likewise.
        * io-curses.c (_io_pr_cell_win, move_cursor_to): Likewise.
        * io-term.c (set_cell_formula): Likewise.
        * io-utils.c (cell_value_string, cell_name, col_to_str): Likewise.
        * io-x11.c (xio_pr_cell_win): Likewise.
        * lists.c (find_cell, find_or_make_cell): Likewise.
        * ref.c (new_value, set_new_value, read_new_value, move_cell,
        copy_cell, add_ref, flush_range_ref, add_ref_fm, flush_ref_fm,
        push_cell): Likewise.
        * regions.c (set_rng): Likewise.
        * window.c (win_label_cols, io_pr_cell, io_move_cell_cursor): Likewise.

        * cell.h, font.h, global.h, io-abstract.h, io-generic.h, io-term.c,
        io-term.h, io-utils.h, list.h, lists.h, oleofile.h, ref.h, regions.h,
        sc.h, sylk.h, utils.h, window.h: If __STDC__, declare zero-argument
        functions using `(void)', not `()'.

        * global.h (for_all_vars, hash_insert, index, rindex): Declare
        argument types if __STDC__.

        * hash.c (hash_insert): 3rd arg is VOIDSTAR, not char *.

        * io-term.c: Declare prototype for getenv,
        move_region, format_area, open_window, close_window, goto_window.

        * io-x11.c (getenv): Argument is const char *, not char *.

        * ref.c (for_all_vars): Use prototype for argument if __STDC__.

        * utils.h (abort, malloc, calloc): Correct prototypes to agree with
        ANSI C.
        * utils.h (ck_fopen): Delete unused declaration.


Fri Jan  1 02:48:28 1993  Tom Lord  (lord@unix1.andrew.cmu.edu)

	* utils.c (fopen_with_backup): the backup_by_copying branch
	had out-of-order parameters to fread/fwrite. (
	(patch from ron@mlfarm.com)

	* ualarm.c: Some systems want <sys/time.h> instead of <time.h>

	* io-x11.c (open_display): actually use the geometry that was
	computed from the resource database.

	* io-utils.c (div => divide): name clash w/stdlib.h

Thu Dec 31 13:16:32 1992  Paul Eggert  (eggert@twinsun.com)

        * sysdef.h (SIGRET): Remove.  All invokers removed.
        This change might cause some harmless compiler warnings in
        old-fashioned hosts where signal functions yield `int', but
        that's better than always generating warnings in modern hosts
        where signal functions yield `void'.

Thu Dec 31 13:12:16 1992  Tom Lord  (lord@ceti.weh.andrew.cmu.edu)

	* xrdb.c: properly include alloca.h (patch from Paul Eggert)

    	* io-term.c (main): show the disclaimer before turning on curses.

	* io-utils.c (ignore_sig): reregister the signal handler after it
	fires.

	* io-x11.c (open_display): init the xwins field of thePort.

	* io-x11.c (get_x11_args): don't merge the command line database
	(which was never computed).

Wed Dec 30 21:49:33 1992  Tom Lord  (lord@wombat.gnu.ai.mit.edu)

	* utils.c, configure.in: added configuration tests for several
	semistandard functions that are (now conditionally) defined in
	utils.c.

Mon Dec 28 20:10:27 1992  Tom Lord  (lord@altair.weh.andrew.cmu.edu)

	* io-x11.c (xio_update_status): fixed formatting of the cell formula

	* io-term.c (main): new long option -nw to not use x.
	new options: --help, -h to show usage.

	* print.c (put_ps_string): quote left parens inside of ps strings.

Mon Dec 21 01:02:03 1992  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* io-term.c (main): added new command line arguments and
	started to use getopt.

	* io-x11.c (set_cursor & elswhere): draw the cursor even when
	  the layout needs to be recomputed (but not when it has never
	  been computed)

	* cells.c (vlookup_str): new formula function.

Sun Dec 20 00:31:00 1992  Tom Lord  (lord@thisbe.weh.andrew.cmu.edu)

	* io-term.c (read_file_and_run_hooks): After reading a
	file, execute the macro bound to load_hooks, if any.

Fri Dec 18 14:53:15 1992  Tom Lord  (lord@chort.weh.andrew.cmu.edu)

	* io-x11 (record_damage): compute label damage precisely.
	Got rid of call to xwin_range which was buggy and supersceded
	by display_range, anyway.

	* display.c (layout): removed two spurious calls to damage in the
	first loop.

	* io-x11.c (io-redisp): don't repaint the cursor cell unecessarily.

	* io-term.c (real_get_chr): On systems that support sigio, 
	block using wait.  This way, timer events can cause continuous
	updating.

Thu Dec 17 01:54:57 1992  Tom Lord  (lord@alcyone.weh.andrew.cmu.edu)

	* ref.c: removed lots of bugs from shift_outside and related
	functions.  The corresponding commands seem to work for a change.

	* io-term.c: made the use of input line buffers more consistent.

	* io-term.c (read_variables, set_region_formula,
	where_is): new interactive functions.

	* io-term.c ({upper,lower}_{left,right}): new functions.

Wed Dec 16 13:13:40 1992  Tom Lord  (lord@unix9.andrew.cmu.edu)

	* various: The SPLIT_REFS option is being removed (as it comes up).

	* utils.c (abort): Turned off the oleo.panic files.

	* font.c (intern_font):  Specifications in def\(a\(u\(l\(t\)?\)?\)?\)? 
	now return 0, which stands for the font that is set using 
	set-default-font.

	* oleofile.c (oleo_write_file): don't bother generating a boundry
	field. (e.g. B;r23c43).  read_file still parses them for compatability.

Sun Dec 13 20:23:28 1992  Tom Lord  (lord@monsoon.ucc.andrew.cmu.edu)

	* ref.c: Turned off the error messages that occured when moving a
	range that partially overlaps formula and variable references.
	That is because this isn't an error. The change means that ranges
	will sometimes be silently adjusted as lines are insert/deleted or
	regions moved.  Is this a problem?

Sat Dec 12 20:17:26 1992  Tom Lord  (lord@wisteria.bh.andrew.cmu.edu)

	* sylk.c/oleofile.c (_read_file): Abort the read after a bad field
	is found.

	* io-x11.c (init): Set the window title.

	* ref.c (flush_range_ref): null deref bug.

	* oleofile.c (oleo_read/write_file): correctly set a0 mode if
	the option is set in the input file.

	* sylk.c (sylk_read/write_file): read/write in a0 mode.

Fri Dec 11 11:44:10 1992  Tom Lord  (lord@watson.bh.andrew.cmu.edu)

	* io-term.c (exchange_point_and_mark): rewritten so as to actually
	work.

	* io-x11.c (several functions): added a new field, redisp_needed,
	to a port structure.  Set and cleared at obvious times (to avoid
	flashy redisplay).  

	* ref.c (flush_ref_fm): Avoid trying flushing if *where is NULL.
	It's not clear that this is the right fix since an old piece of
	TEST code complains about this condition.  I guess the expected
	bug, if this fix is wrong, will be bogus updating.  The
	max_row->highest_row change might have something to do with why
	this bug is showing up now.

	* display.c (pr_display_cell): This function checks to see if the
	cell has truly changed appearence, and if not, does nothing. This
	change is because the cell cursor flashed annoyingly after empty
	cells went from not being allocated to being allocated (but still
	empty);  the fix is a little more general, though.

	* ref.c (shift_outside): fixed several null dereferences in
	condition of loops that remove references to a cell.

	* ref.c, region.c: Wherever the comment
			  /* sparse array bug fixed here */
         occurs, there was a bug caused by keeping pointers to cells
	 through calls to one of the make_cell functions.  The fix
	 is always to recompute the pointer from the row/column address. 
	 A number of bugs related to move_region appear to have had
	 something to do with this.

Thu Dec 10 12:24:10 1992  Tom Lord  (lord@unix5.andrew.cmu.edu)

	* regions.c (move_region): max_row -> highest_row when clipping 
	the region being moved.  This fixed a bug that showed up when the
	last column in the source region had fewer filled rows than other
	rows in the source region.

	* io-term.c init.c (insert_*, delete_*): added new commands to
	insert/delete rows and columns.  Bindings ^O ^K M-^O M-^K.

	* ref.c (shift_outside): When shifting a relative range reference,
	set cur_row/col to the destination of the cell being shifted
	instead of the source.  This appears to be  the long standing bug
	in which move-cells fails to correctly update formulae -- though
	the bug reports aren't clear enough for me to be sure this is the
	only bug.

Wed Dec  9 16:36:13 1992  Tom Lord  (lord@dacre.bh.andrew.cmu.edu)

	* utils.c (fopen_with_backup): applied *part* of a patch from
	somewhere!ron@mlfarm.com.  The fix is to the __backup_by_copying
	case; the correct file is opened as the backup file.
	The patch also replaced fread/fwrite w/ fgetc/fputc; I didn't
	incorporate that because i see no reason why should be necessary.
	Someone send me a bug if i'm wrong, please.

	* parse.y: (yylex): For some reason, variables were never lexed in
	a0 mode.  Now they are.

Fri Dec  4 20:05:37 1992  Tom Lord  (lord@unix8.andrew.cmu.edu)

	* io_term.c:  new interactive function: write-variables.

Fri Nov 27 22:03:10 1992  Tom Lord  (lord@maelstrom.ucc.andrew.cmu.edu)

	* io_x11.c (xio_scan_for_input): recognize Mod1Mask as meta.

Mon Nov 23 20:33:48 1992  Tom Lord  (lord@unix9.andrew.cmu.edu)

	* sylk.c, oleofile.c (*_read_file): Obey user-specified 
	  a0 option when reading files.

	* init.c: new bindings
	   M-C-v    show-all-variables

Sat Nov 21 17:00:40 1992  Tom Lord  (lord@strand.bh.andrew.cmu.edu)

	* io_term.c (real_get_chr): replaced ERR with -1 because not all 
	  curses implementations define ERR.  Hopefully they all use -1.

	* utils.c (stricmp): ifdefed stricmp.

	* Makefile.in (.c.o): -I$(srcdir)

	* io_term.c (main):  Obtain part of the startup message from
	  oleo_version_string so that it is up to date.

